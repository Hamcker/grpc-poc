// source: data-generator.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

goog.exportSymbol('proto.contract.ActualData1', null, global);
goog.exportSymbol('proto.contract.ActualData2', null, global);
goog.exportSymbol('proto.contract.ActualData3', null, global);
goog.exportSymbol('proto.contract.ActualData4', null, global);
goog.exportSymbol('proto.contract.GenerateDataRequest1', null, global);
goog.exportSymbol('proto.contract.GenerateDataRequest2', null, global);
goog.exportSymbol('proto.contract.GenerateDataRequest3', null, global);
goog.exportSymbol('proto.contract.GenerateDataRequest4', null, global);
goog.exportSymbol('proto.contract.GenerateDataResponse1', null, global);
goog.exportSymbol('proto.contract.GenerateDataResponse2', null, global);
goog.exportSymbol('proto.contract.GenerateDataResponse3', null, global);
goog.exportSymbol('proto.contract.GenerateDataResponse4', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contract.GenerateDataRequest1 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.contract.GenerateDataRequest1.repeatedFields_, null);
};
goog.inherits(proto.contract.GenerateDataRequest1, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contract.GenerateDataRequest1.displayName = 'proto.contract.GenerateDataRequest1';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contract.GenerateDataResponse1 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.contract.GenerateDataResponse1.repeatedFields_, null);
};
goog.inherits(proto.contract.GenerateDataResponse1, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contract.GenerateDataResponse1.displayName = 'proto.contract.GenerateDataResponse1';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contract.ActualData1 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.contract.ActualData1, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contract.ActualData1.displayName = 'proto.contract.ActualData1';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contract.GenerateDataRequest2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.contract.GenerateDataRequest2.repeatedFields_, null);
};
goog.inherits(proto.contract.GenerateDataRequest2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contract.GenerateDataRequest2.displayName = 'proto.contract.GenerateDataRequest2';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contract.GenerateDataResponse2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.contract.GenerateDataResponse2.repeatedFields_, null);
};
goog.inherits(proto.contract.GenerateDataResponse2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contract.GenerateDataResponse2.displayName = 'proto.contract.GenerateDataResponse2';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contract.ActualData2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.contract.ActualData2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contract.ActualData2.displayName = 'proto.contract.ActualData2';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contract.GenerateDataRequest3 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.contract.GenerateDataRequest3.repeatedFields_, null);
};
goog.inherits(proto.contract.GenerateDataRequest3, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contract.GenerateDataRequest3.displayName = 'proto.contract.GenerateDataRequest3';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contract.GenerateDataResponse3 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.contract.GenerateDataResponse3.repeatedFields_, null);
};
goog.inherits(proto.contract.GenerateDataResponse3, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contract.GenerateDataResponse3.displayName = 'proto.contract.GenerateDataResponse3';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contract.ActualData3 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.contract.ActualData3, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contract.ActualData3.displayName = 'proto.contract.ActualData3';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contract.GenerateDataRequest4 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.contract.GenerateDataRequest4.repeatedFields_, null);
};
goog.inherits(proto.contract.GenerateDataRequest4, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contract.GenerateDataRequest4.displayName = 'proto.contract.GenerateDataRequest4';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contract.GenerateDataResponse4 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.contract.GenerateDataResponse4.repeatedFields_, null);
};
goog.inherits(proto.contract.GenerateDataResponse4, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contract.GenerateDataResponse4.displayName = 'proto.contract.GenerateDataResponse4';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.contract.ActualData4 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.contract.ActualData4.repeatedFields_, null);
};
goog.inherits(proto.contract.ActualData4, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.contract.ActualData4.displayName = 'proto.contract.ActualData4';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.contract.GenerateDataRequest1.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contract.GenerateDataRequest1.prototype.toObject = function(opt_includeInstance) {
  return proto.contract.GenerateDataRequest1.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contract.GenerateDataRequest1} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contract.GenerateDataRequest1.toObject = function(includeInstance, msg) {
  var f, obj = {
    requiredcount: jspb.Message.getFieldWithDefault(msg, 1, 0),
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.contract.ActualData1.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contract.GenerateDataRequest1}
 */
proto.contract.GenerateDataRequest1.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contract.GenerateDataRequest1;
  return proto.contract.GenerateDataRequest1.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contract.GenerateDataRequest1} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contract.GenerateDataRequest1}
 */
proto.contract.GenerateDataRequest1.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRequiredcount(value);
      break;
    case 4:
      var value = new proto.contract.ActualData1;
      reader.readMessage(value,proto.contract.ActualData1.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contract.GenerateDataRequest1.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contract.GenerateDataRequest1.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contract.GenerateDataRequest1} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contract.GenerateDataRequest1.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequiredcount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.contract.ActualData1.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 RequiredCount = 1;
 * @return {number}
 */
proto.contract.GenerateDataRequest1.prototype.getRequiredcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.contract.GenerateDataRequest1} returns this
 */
proto.contract.GenerateDataRequest1.prototype.setRequiredcount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated ActualData1 Data = 4;
 * @return {!Array<!proto.contract.ActualData1>}
 */
proto.contract.GenerateDataRequest1.prototype.getDataList = function() {
  return /** @type{!Array<!proto.contract.ActualData1>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.contract.ActualData1, 4));
};


/**
 * @param {!Array<!proto.contract.ActualData1>} value
 * @return {!proto.contract.GenerateDataRequest1} returns this
*/
proto.contract.GenerateDataRequest1.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.contract.ActualData1=} opt_value
 * @param {number=} opt_index
 * @return {!proto.contract.ActualData1}
 */
proto.contract.GenerateDataRequest1.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.contract.ActualData1, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.contract.GenerateDataRequest1} returns this
 */
proto.contract.GenerateDataRequest1.prototype.clearDataList = function() {
  return this.setDataList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.contract.GenerateDataResponse1.repeatedFields_ = [2,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contract.GenerateDataResponse1.prototype.toObject = function(opt_includeInstance) {
  return proto.contract.GenerateDataResponse1.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contract.GenerateDataResponse1} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contract.GenerateDataResponse1.toObject = function(includeInstance, msg) {
  var f, obj = {
    totalrows: jspb.Message.getFieldWithDefault(msg, 1, 0),
    timestampsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    timetogeneraterows: jspb.Message.getFieldWithDefault(msg, 3, 0),
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.contract.ActualData1.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contract.GenerateDataResponse1}
 */
proto.contract.GenerateDataResponse1.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contract.GenerateDataResponse1;
  return proto.contract.GenerateDataResponse1.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contract.GenerateDataResponse1} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contract.GenerateDataResponse1}
 */
proto.contract.GenerateDataResponse1.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalrows(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addTimestamps(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimetogeneraterows(value);
      break;
    case 4:
      var value = new proto.contract.ActualData1;
      reader.readMessage(value,proto.contract.ActualData1.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contract.GenerateDataResponse1.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contract.GenerateDataResponse1.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contract.GenerateDataResponse1} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contract.GenerateDataResponse1.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotalrows();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTimestampsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getTimetogeneraterows();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.contract.ActualData1.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 TotalRows = 1;
 * @return {number}
 */
proto.contract.GenerateDataResponse1.prototype.getTotalrows = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.contract.GenerateDataResponse1} returns this
 */
proto.contract.GenerateDataResponse1.prototype.setTotalrows = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated string Timestamps = 2;
 * @return {!Array<string>}
 */
proto.contract.GenerateDataResponse1.prototype.getTimestampsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.contract.GenerateDataResponse1} returns this
 */
proto.contract.GenerateDataResponse1.prototype.setTimestampsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.contract.GenerateDataResponse1} returns this
 */
proto.contract.GenerateDataResponse1.prototype.addTimestamps = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.contract.GenerateDataResponse1} returns this
 */
proto.contract.GenerateDataResponse1.prototype.clearTimestampsList = function() {
  return this.setTimestampsList([]);
};


/**
 * optional int64 TimeToGenerateRows = 3;
 * @return {number}
 */
proto.contract.GenerateDataResponse1.prototype.getTimetogeneraterows = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.contract.GenerateDataResponse1} returns this
 */
proto.contract.GenerateDataResponse1.prototype.setTimetogeneraterows = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated ActualData1 Data = 4;
 * @return {!Array<!proto.contract.ActualData1>}
 */
proto.contract.GenerateDataResponse1.prototype.getDataList = function() {
  return /** @type{!Array<!proto.contract.ActualData1>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.contract.ActualData1, 4));
};


/**
 * @param {!Array<!proto.contract.ActualData1>} value
 * @return {!proto.contract.GenerateDataResponse1} returns this
*/
proto.contract.GenerateDataResponse1.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.contract.ActualData1=} opt_value
 * @param {number=} opt_index
 * @return {!proto.contract.ActualData1}
 */
proto.contract.GenerateDataResponse1.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.contract.ActualData1, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.contract.GenerateDataResponse1} returns this
 */
proto.contract.GenerateDataResponse1.prototype.clearDataList = function() {
  return this.setDataList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contract.ActualData1.prototype.toObject = function(opt_includeInstance) {
  return proto.contract.ActualData1.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contract.ActualData1} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contract.ActualData1.toObject = function(includeInstance, msg) {
  var f, obj = {
    field11: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contract.ActualData1}
 */
proto.contract.ActualData1.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contract.ActualData1;
  return proto.contract.ActualData1.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contract.ActualData1} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contract.ActualData1}
 */
proto.contract.ActualData1.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setField11(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contract.ActualData1.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contract.ActualData1.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contract.ActualData1} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contract.ActualData1.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getField11();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string Field11 = 1;
 * @return {string}
 */
proto.contract.ActualData1.prototype.getField11 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.contract.ActualData1} returns this
 */
proto.contract.ActualData1.prototype.setField11 = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.contract.GenerateDataRequest2.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contract.GenerateDataRequest2.prototype.toObject = function(opt_includeInstance) {
  return proto.contract.GenerateDataRequest2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contract.GenerateDataRequest2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contract.GenerateDataRequest2.toObject = function(includeInstance, msg) {
  var f, obj = {
    requiredcount: jspb.Message.getFieldWithDefault(msg, 1, 0),
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.contract.ActualData2.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contract.GenerateDataRequest2}
 */
proto.contract.GenerateDataRequest2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contract.GenerateDataRequest2;
  return proto.contract.GenerateDataRequest2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contract.GenerateDataRequest2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contract.GenerateDataRequest2}
 */
proto.contract.GenerateDataRequest2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRequiredcount(value);
      break;
    case 4:
      var value = new proto.contract.ActualData2;
      reader.readMessage(value,proto.contract.ActualData2.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contract.GenerateDataRequest2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contract.GenerateDataRequest2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contract.GenerateDataRequest2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contract.GenerateDataRequest2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequiredcount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.contract.ActualData2.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 requiredCount = 1;
 * @return {number}
 */
proto.contract.GenerateDataRequest2.prototype.getRequiredcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.contract.GenerateDataRequest2} returns this
 */
proto.contract.GenerateDataRequest2.prototype.setRequiredcount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated ActualData2 Data = 4;
 * @return {!Array<!proto.contract.ActualData2>}
 */
proto.contract.GenerateDataRequest2.prototype.getDataList = function() {
  return /** @type{!Array<!proto.contract.ActualData2>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.contract.ActualData2, 4));
};


/**
 * @param {!Array<!proto.contract.ActualData2>} value
 * @return {!proto.contract.GenerateDataRequest2} returns this
*/
proto.contract.GenerateDataRequest2.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.contract.ActualData2=} opt_value
 * @param {number=} opt_index
 * @return {!proto.contract.ActualData2}
 */
proto.contract.GenerateDataRequest2.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.contract.ActualData2, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.contract.GenerateDataRequest2} returns this
 */
proto.contract.GenerateDataRequest2.prototype.clearDataList = function() {
  return this.setDataList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.contract.GenerateDataResponse2.repeatedFields_ = [2,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contract.GenerateDataResponse2.prototype.toObject = function(opt_includeInstance) {
  return proto.contract.GenerateDataResponse2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contract.GenerateDataResponse2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contract.GenerateDataResponse2.toObject = function(includeInstance, msg) {
  var f, obj = {
    totalrows: jspb.Message.getFieldWithDefault(msg, 1, 0),
    timestampsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    timetogeneraterows: jspb.Message.getFieldWithDefault(msg, 3, 0),
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.contract.ActualData2.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contract.GenerateDataResponse2}
 */
proto.contract.GenerateDataResponse2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contract.GenerateDataResponse2;
  return proto.contract.GenerateDataResponse2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contract.GenerateDataResponse2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contract.GenerateDataResponse2}
 */
proto.contract.GenerateDataResponse2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalrows(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addTimestamps(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimetogeneraterows(value);
      break;
    case 4:
      var value = new proto.contract.ActualData2;
      reader.readMessage(value,proto.contract.ActualData2.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contract.GenerateDataResponse2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contract.GenerateDataResponse2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contract.GenerateDataResponse2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contract.GenerateDataResponse2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotalrows();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTimestampsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getTimetogeneraterows();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.contract.ActualData2.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 TotalRows = 1;
 * @return {number}
 */
proto.contract.GenerateDataResponse2.prototype.getTotalrows = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.contract.GenerateDataResponse2} returns this
 */
proto.contract.GenerateDataResponse2.prototype.setTotalrows = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated string Timestamps = 2;
 * @return {!Array<string>}
 */
proto.contract.GenerateDataResponse2.prototype.getTimestampsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.contract.GenerateDataResponse2} returns this
 */
proto.contract.GenerateDataResponse2.prototype.setTimestampsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.contract.GenerateDataResponse2} returns this
 */
proto.contract.GenerateDataResponse2.prototype.addTimestamps = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.contract.GenerateDataResponse2} returns this
 */
proto.contract.GenerateDataResponse2.prototype.clearTimestampsList = function() {
  return this.setTimestampsList([]);
};


/**
 * optional int64 TimeToGenerateRows = 3;
 * @return {number}
 */
proto.contract.GenerateDataResponse2.prototype.getTimetogeneraterows = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.contract.GenerateDataResponse2} returns this
 */
proto.contract.GenerateDataResponse2.prototype.setTimetogeneraterows = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated ActualData2 Data = 4;
 * @return {!Array<!proto.contract.ActualData2>}
 */
proto.contract.GenerateDataResponse2.prototype.getDataList = function() {
  return /** @type{!Array<!proto.contract.ActualData2>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.contract.ActualData2, 4));
};


/**
 * @param {!Array<!proto.contract.ActualData2>} value
 * @return {!proto.contract.GenerateDataResponse2} returns this
*/
proto.contract.GenerateDataResponse2.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.contract.ActualData2=} opt_value
 * @param {number=} opt_index
 * @return {!proto.contract.ActualData2}
 */
proto.contract.GenerateDataResponse2.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.contract.ActualData2, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.contract.GenerateDataResponse2} returns this
 */
proto.contract.GenerateDataResponse2.prototype.clearDataList = function() {
  return this.setDataList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contract.ActualData2.prototype.toObject = function(opt_includeInstance) {
  return proto.contract.ActualData2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contract.ActualData2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contract.ActualData2.toObject = function(includeInstance, msg) {
  var f, obj = {
    field21: jspb.Message.getFieldWithDefault(msg, 1, ""),
    field22: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contract.ActualData2}
 */
proto.contract.ActualData2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contract.ActualData2;
  return proto.contract.ActualData2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contract.ActualData2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contract.ActualData2}
 */
proto.contract.ActualData2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setField21(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField22(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contract.ActualData2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contract.ActualData2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contract.ActualData2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contract.ActualData2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getField21();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getField22();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string Field21 = 1;
 * @return {string}
 */
proto.contract.ActualData2.prototype.getField21 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.contract.ActualData2} returns this
 */
proto.contract.ActualData2.prototype.setField21 = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 Field22 = 2;
 * @return {number}
 */
proto.contract.ActualData2.prototype.getField22 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.contract.ActualData2} returns this
 */
proto.contract.ActualData2.prototype.setField22 = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.contract.GenerateDataRequest3.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contract.GenerateDataRequest3.prototype.toObject = function(opt_includeInstance) {
  return proto.contract.GenerateDataRequest3.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contract.GenerateDataRequest3} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contract.GenerateDataRequest3.toObject = function(includeInstance, msg) {
  var f, obj = {
    requiredcount: jspb.Message.getFieldWithDefault(msg, 1, 0),
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.contract.ActualData3.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contract.GenerateDataRequest3}
 */
proto.contract.GenerateDataRequest3.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contract.GenerateDataRequest3;
  return proto.contract.GenerateDataRequest3.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contract.GenerateDataRequest3} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contract.GenerateDataRequest3}
 */
proto.contract.GenerateDataRequest3.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRequiredcount(value);
      break;
    case 4:
      var value = new proto.contract.ActualData3;
      reader.readMessage(value,proto.contract.ActualData3.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contract.GenerateDataRequest3.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contract.GenerateDataRequest3.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contract.GenerateDataRequest3} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contract.GenerateDataRequest3.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequiredcount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.contract.ActualData3.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 requiredCount = 1;
 * @return {number}
 */
proto.contract.GenerateDataRequest3.prototype.getRequiredcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.contract.GenerateDataRequest3} returns this
 */
proto.contract.GenerateDataRequest3.prototype.setRequiredcount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated ActualData3 Data = 4;
 * @return {!Array<!proto.contract.ActualData3>}
 */
proto.contract.GenerateDataRequest3.prototype.getDataList = function() {
  return /** @type{!Array<!proto.contract.ActualData3>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.contract.ActualData3, 4));
};


/**
 * @param {!Array<!proto.contract.ActualData3>} value
 * @return {!proto.contract.GenerateDataRequest3} returns this
*/
proto.contract.GenerateDataRequest3.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.contract.ActualData3=} opt_value
 * @param {number=} opt_index
 * @return {!proto.contract.ActualData3}
 */
proto.contract.GenerateDataRequest3.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.contract.ActualData3, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.contract.GenerateDataRequest3} returns this
 */
proto.contract.GenerateDataRequest3.prototype.clearDataList = function() {
  return this.setDataList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.contract.GenerateDataResponse3.repeatedFields_ = [2,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contract.GenerateDataResponse3.prototype.toObject = function(opt_includeInstance) {
  return proto.contract.GenerateDataResponse3.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contract.GenerateDataResponse3} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contract.GenerateDataResponse3.toObject = function(includeInstance, msg) {
  var f, obj = {
    totalrows: jspb.Message.getFieldWithDefault(msg, 1, 0),
    timestampsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    timetogeneraterows: jspb.Message.getFieldWithDefault(msg, 3, 0),
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.contract.ActualData3.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contract.GenerateDataResponse3}
 */
proto.contract.GenerateDataResponse3.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contract.GenerateDataResponse3;
  return proto.contract.GenerateDataResponse3.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contract.GenerateDataResponse3} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contract.GenerateDataResponse3}
 */
proto.contract.GenerateDataResponse3.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalrows(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addTimestamps(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimetogeneraterows(value);
      break;
    case 4:
      var value = new proto.contract.ActualData3;
      reader.readMessage(value,proto.contract.ActualData3.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contract.GenerateDataResponse3.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contract.GenerateDataResponse3.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contract.GenerateDataResponse3} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contract.GenerateDataResponse3.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotalrows();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTimestampsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getTimetogeneraterows();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.contract.ActualData3.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 TotalRows = 1;
 * @return {number}
 */
proto.contract.GenerateDataResponse3.prototype.getTotalrows = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.contract.GenerateDataResponse3} returns this
 */
proto.contract.GenerateDataResponse3.prototype.setTotalrows = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated string Timestamps = 2;
 * @return {!Array<string>}
 */
proto.contract.GenerateDataResponse3.prototype.getTimestampsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.contract.GenerateDataResponse3} returns this
 */
proto.contract.GenerateDataResponse3.prototype.setTimestampsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.contract.GenerateDataResponse3} returns this
 */
proto.contract.GenerateDataResponse3.prototype.addTimestamps = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.contract.GenerateDataResponse3} returns this
 */
proto.contract.GenerateDataResponse3.prototype.clearTimestampsList = function() {
  return this.setTimestampsList([]);
};


/**
 * optional int64 TimeToGenerateRows = 3;
 * @return {number}
 */
proto.contract.GenerateDataResponse3.prototype.getTimetogeneraterows = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.contract.GenerateDataResponse3} returns this
 */
proto.contract.GenerateDataResponse3.prototype.setTimetogeneraterows = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated ActualData3 Data = 4;
 * @return {!Array<!proto.contract.ActualData3>}
 */
proto.contract.GenerateDataResponse3.prototype.getDataList = function() {
  return /** @type{!Array<!proto.contract.ActualData3>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.contract.ActualData3, 4));
};


/**
 * @param {!Array<!proto.contract.ActualData3>} value
 * @return {!proto.contract.GenerateDataResponse3} returns this
*/
proto.contract.GenerateDataResponse3.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.contract.ActualData3=} opt_value
 * @param {number=} opt_index
 * @return {!proto.contract.ActualData3}
 */
proto.contract.GenerateDataResponse3.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.contract.ActualData3, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.contract.GenerateDataResponse3} returns this
 */
proto.contract.GenerateDataResponse3.prototype.clearDataList = function() {
  return this.setDataList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contract.ActualData3.prototype.toObject = function(opt_includeInstance) {
  return proto.contract.ActualData3.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contract.ActualData3} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contract.ActualData3.toObject = function(includeInstance, msg) {
  var f, obj = {
    field31: jspb.Message.getFieldWithDefault(msg, 1, ""),
    field32: jspb.Message.getFieldWithDefault(msg, 2, 0),
    field33: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contract.ActualData3}
 */
proto.contract.ActualData3.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contract.ActualData3;
  return proto.contract.ActualData3.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contract.ActualData3} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contract.ActualData3}
 */
proto.contract.ActualData3.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setField31(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField32(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setField33(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contract.ActualData3.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contract.ActualData3.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contract.ActualData3} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contract.ActualData3.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getField31();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getField32();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getField33();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string Field31 = 1;
 * @return {string}
 */
proto.contract.ActualData3.prototype.getField31 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.contract.ActualData3} returns this
 */
proto.contract.ActualData3.prototype.setField31 = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 Field32 = 2;
 * @return {number}
 */
proto.contract.ActualData3.prototype.getField32 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.contract.ActualData3} returns this
 */
proto.contract.ActualData3.prototype.setField32 = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool Field33 = 3;
 * @return {boolean}
 */
proto.contract.ActualData3.prototype.getField33 = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.contract.ActualData3} returns this
 */
proto.contract.ActualData3.prototype.setField33 = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.contract.GenerateDataRequest4.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contract.GenerateDataRequest4.prototype.toObject = function(opt_includeInstance) {
  return proto.contract.GenerateDataRequest4.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contract.GenerateDataRequest4} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contract.GenerateDataRequest4.toObject = function(includeInstance, msg) {
  var f, obj = {
    requiredcount: jspb.Message.getFieldWithDefault(msg, 1, 0),
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.contract.ActualData4.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contract.GenerateDataRequest4}
 */
proto.contract.GenerateDataRequest4.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contract.GenerateDataRequest4;
  return proto.contract.GenerateDataRequest4.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contract.GenerateDataRequest4} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contract.GenerateDataRequest4}
 */
proto.contract.GenerateDataRequest4.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRequiredcount(value);
      break;
    case 2:
      var value = new proto.contract.ActualData4;
      reader.readMessage(value,proto.contract.ActualData4.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contract.GenerateDataRequest4.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contract.GenerateDataRequest4.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contract.GenerateDataRequest4} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contract.GenerateDataRequest4.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequiredcount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.contract.ActualData4.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 requiredCount = 1;
 * @return {number}
 */
proto.contract.GenerateDataRequest4.prototype.getRequiredcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.contract.GenerateDataRequest4} returns this
 */
proto.contract.GenerateDataRequest4.prototype.setRequiredcount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated ActualData4 Data = 2;
 * @return {!Array<!proto.contract.ActualData4>}
 */
proto.contract.GenerateDataRequest4.prototype.getDataList = function() {
  return /** @type{!Array<!proto.contract.ActualData4>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.contract.ActualData4, 2));
};


/**
 * @param {!Array<!proto.contract.ActualData4>} value
 * @return {!proto.contract.GenerateDataRequest4} returns this
*/
proto.contract.GenerateDataRequest4.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.contract.ActualData4=} opt_value
 * @param {number=} opt_index
 * @return {!proto.contract.ActualData4}
 */
proto.contract.GenerateDataRequest4.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.contract.ActualData4, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.contract.GenerateDataRequest4} returns this
 */
proto.contract.GenerateDataRequest4.prototype.clearDataList = function() {
  return this.setDataList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.contract.GenerateDataResponse4.repeatedFields_ = [2,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contract.GenerateDataResponse4.prototype.toObject = function(opt_includeInstance) {
  return proto.contract.GenerateDataResponse4.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contract.GenerateDataResponse4} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contract.GenerateDataResponse4.toObject = function(includeInstance, msg) {
  var f, obj = {
    totalrows: jspb.Message.getFieldWithDefault(msg, 1, 0),
    timestampsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    timetogeneraterows: jspb.Message.getFieldWithDefault(msg, 3, 0),
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.contract.ActualData4.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contract.GenerateDataResponse4}
 */
proto.contract.GenerateDataResponse4.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contract.GenerateDataResponse4;
  return proto.contract.GenerateDataResponse4.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contract.GenerateDataResponse4} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contract.GenerateDataResponse4}
 */
proto.contract.GenerateDataResponse4.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalrows(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addTimestamps(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimetogeneraterows(value);
      break;
    case 4:
      var value = new proto.contract.ActualData4;
      reader.readMessage(value,proto.contract.ActualData4.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contract.GenerateDataResponse4.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contract.GenerateDataResponse4.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contract.GenerateDataResponse4} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contract.GenerateDataResponse4.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotalrows();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTimestampsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getTimetogeneraterows();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.contract.ActualData4.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 TotalRows = 1;
 * @return {number}
 */
proto.contract.GenerateDataResponse4.prototype.getTotalrows = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.contract.GenerateDataResponse4} returns this
 */
proto.contract.GenerateDataResponse4.prototype.setTotalrows = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated string Timestamps = 2;
 * @return {!Array<string>}
 */
proto.contract.GenerateDataResponse4.prototype.getTimestampsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.contract.GenerateDataResponse4} returns this
 */
proto.contract.GenerateDataResponse4.prototype.setTimestampsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.contract.GenerateDataResponse4} returns this
 */
proto.contract.GenerateDataResponse4.prototype.addTimestamps = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.contract.GenerateDataResponse4} returns this
 */
proto.contract.GenerateDataResponse4.prototype.clearTimestampsList = function() {
  return this.setTimestampsList([]);
};


/**
 * optional int64 TimeToGenerateRows = 3;
 * @return {number}
 */
proto.contract.GenerateDataResponse4.prototype.getTimetogeneraterows = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.contract.GenerateDataResponse4} returns this
 */
proto.contract.GenerateDataResponse4.prototype.setTimetogeneraterows = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated ActualData4 Data = 4;
 * @return {!Array<!proto.contract.ActualData4>}
 */
proto.contract.GenerateDataResponse4.prototype.getDataList = function() {
  return /** @type{!Array<!proto.contract.ActualData4>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.contract.ActualData4, 4));
};


/**
 * @param {!Array<!proto.contract.ActualData4>} value
 * @return {!proto.contract.GenerateDataResponse4} returns this
*/
proto.contract.GenerateDataResponse4.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.contract.ActualData4=} opt_value
 * @param {number=} opt_index
 * @return {!proto.contract.ActualData4}
 */
proto.contract.GenerateDataResponse4.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.contract.ActualData4, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.contract.GenerateDataResponse4} returns this
 */
proto.contract.GenerateDataResponse4.prototype.clearDataList = function() {
  return this.setDataList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.contract.ActualData4.repeatedFields_ = [2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.contract.ActualData4.prototype.toObject = function(opt_includeInstance) {
  return proto.contract.ActualData4.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.contract.ActualData4} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contract.ActualData4.toObject = function(includeInstance, msg) {
  var f, obj = {
    field40: jspb.Message.getFieldWithDefault(msg, 1, ""),
    field41List: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    field42: jspb.Message.getFieldWithDefault(msg, 3, 0),
    field43List: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    field44: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    field45List: (f = jspb.Message.getRepeatedBooleanField(msg, 6)) == null ? undefined : f,
    field46: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    field47List: (f = jspb.Message.getRepeatedFloatingPointField(msg, 8)) == null ? undefined : f,
    field48: (f = msg.getField48()) && proto.contract.ActualData4.toObject(includeInstance, f),
    field49List: jspb.Message.toObjectList(msg.getField49List(),
    proto.contract.ActualData4.toObject, includeInstance),
    field410: jspb.Message.getFieldWithDefault(msg, 11, ""),
    field411List: (f = jspb.Message.getRepeatedField(msg, 12)) == null ? undefined : f,
    field412: jspb.Message.getFieldWithDefault(msg, 13, 0),
    field413List: (f = jspb.Message.getRepeatedField(msg, 14)) == null ? undefined : f,
    field414: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),
    field415List: (f = jspb.Message.getRepeatedBooleanField(msg, 16)) == null ? undefined : f,
    field416: jspb.Message.getFloatingPointFieldWithDefault(msg, 17, 0.0),
    field417List: (f = jspb.Message.getRepeatedFloatingPointField(msg, 18)) == null ? undefined : f,
    field418: (f = msg.getField418()) && proto.contract.ActualData4.toObject(includeInstance, f),
    field419List: jspb.Message.toObjectList(msg.getField419List(),
    proto.contract.ActualData4.toObject, includeInstance),
    field420: jspb.Message.getFieldWithDefault(msg, 21, ""),
    field421List: (f = jspb.Message.getRepeatedField(msg, 22)) == null ? undefined : f,
    field422: jspb.Message.getFieldWithDefault(msg, 23, 0),
    field423List: (f = jspb.Message.getRepeatedField(msg, 24)) == null ? undefined : f,
    field424: jspb.Message.getBooleanFieldWithDefault(msg, 25, false),
    field425List: (f = jspb.Message.getRepeatedBooleanField(msg, 26)) == null ? undefined : f,
    field426: jspb.Message.getFloatingPointFieldWithDefault(msg, 27, 0.0),
    field427List: (f = jspb.Message.getRepeatedFloatingPointField(msg, 28)) == null ? undefined : f,
    field428: (f = msg.getField428()) && proto.contract.ActualData4.toObject(includeInstance, f),
    field429List: jspb.Message.toObjectList(msg.getField429List(),
    proto.contract.ActualData4.toObject, includeInstance),
    field430: jspb.Message.getFieldWithDefault(msg, 31, ""),
    field431List: (f = jspb.Message.getRepeatedField(msg, 32)) == null ? undefined : f,
    field432: jspb.Message.getFieldWithDefault(msg, 33, 0),
    field433List: (f = jspb.Message.getRepeatedField(msg, 34)) == null ? undefined : f,
    field434: jspb.Message.getBooleanFieldWithDefault(msg, 35, false),
    field435List: (f = jspb.Message.getRepeatedBooleanField(msg, 36)) == null ? undefined : f,
    field436: jspb.Message.getFloatingPointFieldWithDefault(msg, 37, 0.0),
    field437List: (f = jspb.Message.getRepeatedFloatingPointField(msg, 38)) == null ? undefined : f,
    field438: (f = msg.getField438()) && proto.contract.ActualData4.toObject(includeInstance, f),
    field439List: jspb.Message.toObjectList(msg.getField439List(),
    proto.contract.ActualData4.toObject, includeInstance),
    field440: jspb.Message.getFieldWithDefault(msg, 41, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.contract.ActualData4}
 */
proto.contract.ActualData4.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.contract.ActualData4;
  return proto.contract.ActualData4.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.contract.ActualData4} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.contract.ActualData4}
 */
proto.contract.ActualData4.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setField40(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addField41(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField42(value);
      break;
    case 4:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addField43(values[i]);
      }
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setField44(value);
      break;
    case 6:
      var values = /** @type {!Array<boolean>} */ (reader.isDelimited() ? reader.readPackedBool() : [reader.readBool()]);
      for (var i = 0; i < values.length; i++) {
        msg.addField45(values[i]);
      }
      break;
    case 7:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setField46(value);
      break;
    case 8:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addField47(values[i]);
      }
      break;
    case 9:
      var value = new proto.contract.ActualData4;
      reader.readMessage(value,proto.contract.ActualData4.deserializeBinaryFromReader);
      msg.setField48(value);
      break;
    case 10:
      var value = new proto.contract.ActualData4;
      reader.readMessage(value,proto.contract.ActualData4.deserializeBinaryFromReader);
      msg.addField49(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setField410(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.addField411(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField412(value);
      break;
    case 14:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addField413(values[i]);
      }
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setField414(value);
      break;
    case 16:
      var values = /** @type {!Array<boolean>} */ (reader.isDelimited() ? reader.readPackedBool() : [reader.readBool()]);
      for (var i = 0; i < values.length; i++) {
        msg.addField415(values[i]);
      }
      break;
    case 17:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setField416(value);
      break;
    case 18:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addField417(values[i]);
      }
      break;
    case 19:
      var value = new proto.contract.ActualData4;
      reader.readMessage(value,proto.contract.ActualData4.deserializeBinaryFromReader);
      msg.setField418(value);
      break;
    case 20:
      var value = new proto.contract.ActualData4;
      reader.readMessage(value,proto.contract.ActualData4.deserializeBinaryFromReader);
      msg.addField419(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setField420(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.addField421(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField422(value);
      break;
    case 24:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addField423(values[i]);
      }
      break;
    case 25:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setField424(value);
      break;
    case 26:
      var values = /** @type {!Array<boolean>} */ (reader.isDelimited() ? reader.readPackedBool() : [reader.readBool()]);
      for (var i = 0; i < values.length; i++) {
        msg.addField425(values[i]);
      }
      break;
    case 27:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setField426(value);
      break;
    case 28:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addField427(values[i]);
      }
      break;
    case 29:
      var value = new proto.contract.ActualData4;
      reader.readMessage(value,proto.contract.ActualData4.deserializeBinaryFromReader);
      msg.setField428(value);
      break;
    case 30:
      var value = new proto.contract.ActualData4;
      reader.readMessage(value,proto.contract.ActualData4.deserializeBinaryFromReader);
      msg.addField429(value);
      break;
    case 31:
      var value = /** @type {string} */ (reader.readString());
      msg.setField430(value);
      break;
    case 32:
      var value = /** @type {string} */ (reader.readString());
      msg.addField431(value);
      break;
    case 33:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setField432(value);
      break;
    case 34:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addField433(values[i]);
      }
      break;
    case 35:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setField434(value);
      break;
    case 36:
      var values = /** @type {!Array<boolean>} */ (reader.isDelimited() ? reader.readPackedBool() : [reader.readBool()]);
      for (var i = 0; i < values.length; i++) {
        msg.addField435(values[i]);
      }
      break;
    case 37:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setField436(value);
      break;
    case 38:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addField437(values[i]);
      }
      break;
    case 39:
      var value = new proto.contract.ActualData4;
      reader.readMessage(value,proto.contract.ActualData4.deserializeBinaryFromReader);
      msg.setField438(value);
      break;
    case 40:
      var value = new proto.contract.ActualData4;
      reader.readMessage(value,proto.contract.ActualData4.deserializeBinaryFromReader);
      msg.addField439(value);
      break;
    case 41:
      var value = /** @type {string} */ (reader.readString());
      msg.setField440(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.contract.ActualData4.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.contract.ActualData4.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.contract.ActualData4} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.contract.ActualData4.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getField40();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getField41List();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getField42();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getField43List();
  if (f.length > 0) {
    writer.writePackedInt32(
      4,
      f
    );
  }
  f = message.getField44();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getField45List();
  if (f.length > 0) {
    writer.writePackedBool(
      6,
      f
    );
  }
  f = message.getField46();
  if (f !== 0.0) {
    writer.writeFloat(
      7,
      f
    );
  }
  f = message.getField47List();
  if (f.length > 0) {
    writer.writePackedFloat(
      8,
      f
    );
  }
  f = message.getField48();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.contract.ActualData4.serializeBinaryToWriter
    );
  }
  f = message.getField49List();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.contract.ActualData4.serializeBinaryToWriter
    );
  }
  f = message.getField410();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getField411List();
  if (f.length > 0) {
    writer.writeRepeatedString(
      12,
      f
    );
  }
  f = message.getField412();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getField413List();
  if (f.length > 0) {
    writer.writePackedInt32(
      14,
      f
    );
  }
  f = message.getField414();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
  f = message.getField415List();
  if (f.length > 0) {
    writer.writePackedBool(
      16,
      f
    );
  }
  f = message.getField416();
  if (f !== 0.0) {
    writer.writeFloat(
      17,
      f
    );
  }
  f = message.getField417List();
  if (f.length > 0) {
    writer.writePackedFloat(
      18,
      f
    );
  }
  f = message.getField418();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      proto.contract.ActualData4.serializeBinaryToWriter
    );
  }
  f = message.getField419List();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      20,
      f,
      proto.contract.ActualData4.serializeBinaryToWriter
    );
  }
  f = message.getField420();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getField421List();
  if (f.length > 0) {
    writer.writeRepeatedString(
      22,
      f
    );
  }
  f = message.getField422();
  if (f !== 0) {
    writer.writeInt32(
      23,
      f
    );
  }
  f = message.getField423List();
  if (f.length > 0) {
    writer.writePackedInt32(
      24,
      f
    );
  }
  f = message.getField424();
  if (f) {
    writer.writeBool(
      25,
      f
    );
  }
  f = message.getField425List();
  if (f.length > 0) {
    writer.writePackedBool(
      26,
      f
    );
  }
  f = message.getField426();
  if (f !== 0.0) {
    writer.writeFloat(
      27,
      f
    );
  }
  f = message.getField427List();
  if (f.length > 0) {
    writer.writePackedFloat(
      28,
      f
    );
  }
  f = message.getField428();
  if (f != null) {
    writer.writeMessage(
      29,
      f,
      proto.contract.ActualData4.serializeBinaryToWriter
    );
  }
  f = message.getField429List();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      30,
      f,
      proto.contract.ActualData4.serializeBinaryToWriter
    );
  }
  f = message.getField430();
  if (f.length > 0) {
    writer.writeString(
      31,
      f
    );
  }
  f = message.getField431List();
  if (f.length > 0) {
    writer.writeRepeatedString(
      32,
      f
    );
  }
  f = message.getField432();
  if (f !== 0) {
    writer.writeInt32(
      33,
      f
    );
  }
  f = message.getField433List();
  if (f.length > 0) {
    writer.writePackedInt32(
      34,
      f
    );
  }
  f = message.getField434();
  if (f) {
    writer.writeBool(
      35,
      f
    );
  }
  f = message.getField435List();
  if (f.length > 0) {
    writer.writePackedBool(
      36,
      f
    );
  }
  f = message.getField436();
  if (f !== 0.0) {
    writer.writeFloat(
      37,
      f
    );
  }
  f = message.getField437List();
  if (f.length > 0) {
    writer.writePackedFloat(
      38,
      f
    );
  }
  f = message.getField438();
  if (f != null) {
    writer.writeMessage(
      39,
      f,
      proto.contract.ActualData4.serializeBinaryToWriter
    );
  }
  f = message.getField439List();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      40,
      f,
      proto.contract.ActualData4.serializeBinaryToWriter
    );
  }
  f = message.getField440();
  if (f.length > 0) {
    writer.writeString(
      41,
      f
    );
  }
};


/**
 * optional string Field40 = 1;
 * @return {string}
 */
proto.contract.ActualData4.prototype.getField40 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.setField40 = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string Field41 = 2;
 * @return {!Array<string>}
 */
proto.contract.ActualData4.prototype.getField41List = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.setField41List = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.addField41 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.clearField41List = function() {
  return this.setField41List([]);
};


/**
 * optional int32 Field42 = 3;
 * @return {number}
 */
proto.contract.ActualData4.prototype.getField42 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.setField42 = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated int32 Field43 = 4;
 * @return {!Array<number>}
 */
proto.contract.ActualData4.prototype.getField43List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.setField43List = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.addField43 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.clearField43List = function() {
  return this.setField43List([]);
};


/**
 * optional bool Field44 = 5;
 * @return {boolean}
 */
proto.contract.ActualData4.prototype.getField44 = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.setField44 = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * repeated bool Field45 = 6;
 * @return {!Array<boolean>}
 */
proto.contract.ActualData4.prototype.getField45List = function() {
  return /** @type {!Array<boolean>} */ (jspb.Message.getRepeatedBooleanField(this, 6));
};


/**
 * @param {!Array<boolean>} value
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.setField45List = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {boolean} value
 * @param {number=} opt_index
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.addField45 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.clearField45List = function() {
  return this.setField45List([]);
};


/**
 * optional float Field46 = 7;
 * @return {number}
 */
proto.contract.ActualData4.prototype.getField46 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.setField46 = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * repeated float Field47 = 8;
 * @return {!Array<number>}
 */
proto.contract.ActualData4.prototype.getField47List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 8));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.setField47List = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.addField47 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.clearField47List = function() {
  return this.setField47List([]);
};


/**
 * optional ActualData4 Field48 = 9;
 * @return {?proto.contract.ActualData4}
 */
proto.contract.ActualData4.prototype.getField48 = function() {
  return /** @type{?proto.contract.ActualData4} */ (
    jspb.Message.getWrapperField(this, proto.contract.ActualData4, 9));
};


/**
 * @param {?proto.contract.ActualData4|undefined} value
 * @return {!proto.contract.ActualData4} returns this
*/
proto.contract.ActualData4.prototype.setField48 = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.clearField48 = function() {
  return this.setField48(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contract.ActualData4.prototype.hasField48 = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * repeated ActualData4 Field49 = 10;
 * @return {!Array<!proto.contract.ActualData4>}
 */
proto.contract.ActualData4.prototype.getField49List = function() {
  return /** @type{!Array<!proto.contract.ActualData4>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.contract.ActualData4, 10));
};


/**
 * @param {!Array<!proto.contract.ActualData4>} value
 * @return {!proto.contract.ActualData4} returns this
*/
proto.contract.ActualData4.prototype.setField49List = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.contract.ActualData4=} opt_value
 * @param {number=} opt_index
 * @return {!proto.contract.ActualData4}
 */
proto.contract.ActualData4.prototype.addField49 = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.contract.ActualData4, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.clearField49List = function() {
  return this.setField49List([]);
};


/**
 * optional string Field410 = 11;
 * @return {string}
 */
proto.contract.ActualData4.prototype.getField410 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.setField410 = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * repeated string Field411 = 12;
 * @return {!Array<string>}
 */
proto.contract.ActualData4.prototype.getField411List = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 12));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.setField411List = function(value) {
  return jspb.Message.setField(this, 12, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.addField411 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 12, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.clearField411List = function() {
  return this.setField411List([]);
};


/**
 * optional int32 Field412 = 13;
 * @return {number}
 */
proto.contract.ActualData4.prototype.getField412 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.setField412 = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * repeated int32 Field413 = 14;
 * @return {!Array<number>}
 */
proto.contract.ActualData4.prototype.getField413List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 14));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.setField413List = function(value) {
  return jspb.Message.setField(this, 14, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.addField413 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 14, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.clearField413List = function() {
  return this.setField413List([]);
};


/**
 * optional bool Field414 = 15;
 * @return {boolean}
 */
proto.contract.ActualData4.prototype.getField414 = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.setField414 = function(value) {
  return jspb.Message.setProto3BooleanField(this, 15, value);
};


/**
 * repeated bool Field415 = 16;
 * @return {!Array<boolean>}
 */
proto.contract.ActualData4.prototype.getField415List = function() {
  return /** @type {!Array<boolean>} */ (jspb.Message.getRepeatedBooleanField(this, 16));
};


/**
 * @param {!Array<boolean>} value
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.setField415List = function(value) {
  return jspb.Message.setField(this, 16, value || []);
};


/**
 * @param {boolean} value
 * @param {number=} opt_index
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.addField415 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 16, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.clearField415List = function() {
  return this.setField415List([]);
};


/**
 * optional float Field416 = 17;
 * @return {number}
 */
proto.contract.ActualData4.prototype.getField416 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 17, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.setField416 = function(value) {
  return jspb.Message.setProto3FloatField(this, 17, value);
};


/**
 * repeated float Field417 = 18;
 * @return {!Array<number>}
 */
proto.contract.ActualData4.prototype.getField417List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 18));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.setField417List = function(value) {
  return jspb.Message.setField(this, 18, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.addField417 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 18, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.clearField417List = function() {
  return this.setField417List([]);
};


/**
 * optional ActualData4 Field418 = 19;
 * @return {?proto.contract.ActualData4}
 */
proto.contract.ActualData4.prototype.getField418 = function() {
  return /** @type{?proto.contract.ActualData4} */ (
    jspb.Message.getWrapperField(this, proto.contract.ActualData4, 19));
};


/**
 * @param {?proto.contract.ActualData4|undefined} value
 * @return {!proto.contract.ActualData4} returns this
*/
proto.contract.ActualData4.prototype.setField418 = function(value) {
  return jspb.Message.setWrapperField(this, 19, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.clearField418 = function() {
  return this.setField418(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contract.ActualData4.prototype.hasField418 = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * repeated ActualData4 Field419 = 20;
 * @return {!Array<!proto.contract.ActualData4>}
 */
proto.contract.ActualData4.prototype.getField419List = function() {
  return /** @type{!Array<!proto.contract.ActualData4>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.contract.ActualData4, 20));
};


/**
 * @param {!Array<!proto.contract.ActualData4>} value
 * @return {!proto.contract.ActualData4} returns this
*/
proto.contract.ActualData4.prototype.setField419List = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 20, value);
};


/**
 * @param {!proto.contract.ActualData4=} opt_value
 * @param {number=} opt_index
 * @return {!proto.contract.ActualData4}
 */
proto.contract.ActualData4.prototype.addField419 = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 20, opt_value, proto.contract.ActualData4, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.clearField419List = function() {
  return this.setField419List([]);
};


/**
 * optional string Field420 = 21;
 * @return {string}
 */
proto.contract.ActualData4.prototype.getField420 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.setField420 = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * repeated string Field421 = 22;
 * @return {!Array<string>}
 */
proto.contract.ActualData4.prototype.getField421List = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 22));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.setField421List = function(value) {
  return jspb.Message.setField(this, 22, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.addField421 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 22, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.clearField421List = function() {
  return this.setField421List([]);
};


/**
 * optional int32 Field422 = 23;
 * @return {number}
 */
proto.contract.ActualData4.prototype.getField422 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/**
 * @param {number} value
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.setField422 = function(value) {
  return jspb.Message.setProto3IntField(this, 23, value);
};


/**
 * repeated int32 Field423 = 24;
 * @return {!Array<number>}
 */
proto.contract.ActualData4.prototype.getField423List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 24));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.setField423List = function(value) {
  return jspb.Message.setField(this, 24, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.addField423 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 24, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.clearField423List = function() {
  return this.setField423List([]);
};


/**
 * optional bool Field424 = 25;
 * @return {boolean}
 */
proto.contract.ActualData4.prototype.getField424 = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 25, false));
};


/**
 * @param {boolean} value
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.setField424 = function(value) {
  return jspb.Message.setProto3BooleanField(this, 25, value);
};


/**
 * repeated bool Field425 = 26;
 * @return {!Array<boolean>}
 */
proto.contract.ActualData4.prototype.getField425List = function() {
  return /** @type {!Array<boolean>} */ (jspb.Message.getRepeatedBooleanField(this, 26));
};


/**
 * @param {!Array<boolean>} value
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.setField425List = function(value) {
  return jspb.Message.setField(this, 26, value || []);
};


/**
 * @param {boolean} value
 * @param {number=} opt_index
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.addField425 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 26, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.clearField425List = function() {
  return this.setField425List([]);
};


/**
 * optional float Field426 = 27;
 * @return {number}
 */
proto.contract.ActualData4.prototype.getField426 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 27, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.setField426 = function(value) {
  return jspb.Message.setProto3FloatField(this, 27, value);
};


/**
 * repeated float Field427 = 28;
 * @return {!Array<number>}
 */
proto.contract.ActualData4.prototype.getField427List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 28));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.setField427List = function(value) {
  return jspb.Message.setField(this, 28, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.addField427 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 28, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.clearField427List = function() {
  return this.setField427List([]);
};


/**
 * optional ActualData4 Field428 = 29;
 * @return {?proto.contract.ActualData4}
 */
proto.contract.ActualData4.prototype.getField428 = function() {
  return /** @type{?proto.contract.ActualData4} */ (
    jspb.Message.getWrapperField(this, proto.contract.ActualData4, 29));
};


/**
 * @param {?proto.contract.ActualData4|undefined} value
 * @return {!proto.contract.ActualData4} returns this
*/
proto.contract.ActualData4.prototype.setField428 = function(value) {
  return jspb.Message.setWrapperField(this, 29, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.clearField428 = function() {
  return this.setField428(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contract.ActualData4.prototype.hasField428 = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * repeated ActualData4 Field429 = 30;
 * @return {!Array<!proto.contract.ActualData4>}
 */
proto.contract.ActualData4.prototype.getField429List = function() {
  return /** @type{!Array<!proto.contract.ActualData4>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.contract.ActualData4, 30));
};


/**
 * @param {!Array<!proto.contract.ActualData4>} value
 * @return {!proto.contract.ActualData4} returns this
*/
proto.contract.ActualData4.prototype.setField429List = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 30, value);
};


/**
 * @param {!proto.contract.ActualData4=} opt_value
 * @param {number=} opt_index
 * @return {!proto.contract.ActualData4}
 */
proto.contract.ActualData4.prototype.addField429 = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 30, opt_value, proto.contract.ActualData4, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.clearField429List = function() {
  return this.setField429List([]);
};


/**
 * optional string Field430 = 31;
 * @return {string}
 */
proto.contract.ActualData4.prototype.getField430 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 31, ""));
};


/**
 * @param {string} value
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.setField430 = function(value) {
  return jspb.Message.setProto3StringField(this, 31, value);
};


/**
 * repeated string Field431 = 32;
 * @return {!Array<string>}
 */
proto.contract.ActualData4.prototype.getField431List = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 32));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.setField431List = function(value) {
  return jspb.Message.setField(this, 32, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.addField431 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 32, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.clearField431List = function() {
  return this.setField431List([]);
};


/**
 * optional int32 Field432 = 33;
 * @return {number}
 */
proto.contract.ActualData4.prototype.getField432 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 33, 0));
};


/**
 * @param {number} value
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.setField432 = function(value) {
  return jspb.Message.setProto3IntField(this, 33, value);
};


/**
 * repeated int32 Field433 = 34;
 * @return {!Array<number>}
 */
proto.contract.ActualData4.prototype.getField433List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 34));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.setField433List = function(value) {
  return jspb.Message.setField(this, 34, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.addField433 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 34, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.clearField433List = function() {
  return this.setField433List([]);
};


/**
 * optional bool Field434 = 35;
 * @return {boolean}
 */
proto.contract.ActualData4.prototype.getField434 = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 35, false));
};


/**
 * @param {boolean} value
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.setField434 = function(value) {
  return jspb.Message.setProto3BooleanField(this, 35, value);
};


/**
 * repeated bool Field435 = 36;
 * @return {!Array<boolean>}
 */
proto.contract.ActualData4.prototype.getField435List = function() {
  return /** @type {!Array<boolean>} */ (jspb.Message.getRepeatedBooleanField(this, 36));
};


/**
 * @param {!Array<boolean>} value
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.setField435List = function(value) {
  return jspb.Message.setField(this, 36, value || []);
};


/**
 * @param {boolean} value
 * @param {number=} opt_index
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.addField435 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 36, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.clearField435List = function() {
  return this.setField435List([]);
};


/**
 * optional float Field436 = 37;
 * @return {number}
 */
proto.contract.ActualData4.prototype.getField436 = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 37, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.setField436 = function(value) {
  return jspb.Message.setProto3FloatField(this, 37, value);
};


/**
 * repeated float Field437 = 38;
 * @return {!Array<number>}
 */
proto.contract.ActualData4.prototype.getField437List = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 38));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.setField437List = function(value) {
  return jspb.Message.setField(this, 38, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.addField437 = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 38, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.clearField437List = function() {
  return this.setField437List([]);
};


/**
 * optional ActualData4 Field438 = 39;
 * @return {?proto.contract.ActualData4}
 */
proto.contract.ActualData4.prototype.getField438 = function() {
  return /** @type{?proto.contract.ActualData4} */ (
    jspb.Message.getWrapperField(this, proto.contract.ActualData4, 39));
};


/**
 * @param {?proto.contract.ActualData4|undefined} value
 * @return {!proto.contract.ActualData4} returns this
*/
proto.contract.ActualData4.prototype.setField438 = function(value) {
  return jspb.Message.setWrapperField(this, 39, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.clearField438 = function() {
  return this.setField438(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.contract.ActualData4.prototype.hasField438 = function() {
  return jspb.Message.getField(this, 39) != null;
};


/**
 * repeated ActualData4 Field439 = 40;
 * @return {!Array<!proto.contract.ActualData4>}
 */
proto.contract.ActualData4.prototype.getField439List = function() {
  return /** @type{!Array<!proto.contract.ActualData4>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.contract.ActualData4, 40));
};


/**
 * @param {!Array<!proto.contract.ActualData4>} value
 * @return {!proto.contract.ActualData4} returns this
*/
proto.contract.ActualData4.prototype.setField439List = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 40, value);
};


/**
 * @param {!proto.contract.ActualData4=} opt_value
 * @param {number=} opt_index
 * @return {!proto.contract.ActualData4}
 */
proto.contract.ActualData4.prototype.addField439 = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 40, opt_value, proto.contract.ActualData4, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.clearField439List = function() {
  return this.setField439List([]);
};


/**
 * optional string Field440 = 41;
 * @return {string}
 */
proto.contract.ActualData4.prototype.getField440 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 41, ""));
};


/**
 * @param {string} value
 * @return {!proto.contract.ActualData4} returns this
 */
proto.contract.ActualData4.prototype.setField440 = function(value) {
  return jspb.Message.setProto3StringField(this, 41, value);
};


goog.object.extend(exports, proto.contract);
